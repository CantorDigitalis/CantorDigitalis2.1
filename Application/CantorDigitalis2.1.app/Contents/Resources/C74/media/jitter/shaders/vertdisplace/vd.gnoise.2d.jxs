<jittershader name="gnoise2d">
	<param name="pg" type="vec4" default="0.968466 -0.021285 -0.248235 25.000000 -0.690789 -0.721500 -0.047429 21.000000 0.779528 0.547430 -0.304394 14.000000 -0.241435 0.391107 -0.888113 8.000000 -0.464339 -0.603121 -0.648564 24.000000 0.603076 -0.131572 -0.786758 29.000000 0.324718 0.001785 -0.945809 21.000000 0.018136 -0.317588 0.948055 15.000000 -0.859874 0.254063 0.442797 21.000000 0.017468 0.534043 -0.845277 7.000000 0.583656 0.760751 0.283908 23.000000 0.972741 -0.167114 0.160774 23.000000 0.078496 -0.995785 0.047443 5.000000 -0.191721 -0.882823 0.428798 11.000000 -0.806638 0.550786 -0.214405 6.000000 -0.710750 0.592115 0.379782 1.000000 0.397925 -0.828121 -0.394805 25.000000 0.705613 0.238501 0.667253 0.000000 0.673270 0.698684 0.241967 19.000000 0.615564 0.327729 -0.716711 3.000000 -0.414273 -0.372706 -0.830342 27.000000 -0.552856 0.771125 -0.315781 14.000000 0.271008 -0.525028 0.806784 29.000000 0.662473 0.288572 -0.691271 9.000000 0.943428 -0.331214 -0.015540 5.000000 -0.505263 0.862872 -0.012690 2.000000 -0.805019 -0.592603 -0.027661 26.000000 0.884789 -0.232485 0.403856 14.000000 0.373749 0.414048 0.829986 17.000000 -0.432159 -0.363928 -0.825103 27.000000 0.940365 -0.161234 0.299527 16.000000 -0.490376 -0.474950 0.730722 28.000000 0.968466 -0.021285 -0.248235 25.000000 -0.690789 -0.721500 -0.047429 21.000000 0.779528 0.547430 -0.304394 14.000000 -0.241435 0.391107 -0.888113 8.000000 -0.464339 -0.603121 -0.648564 24.000000 0.603076 -0.131572 -0.786758 29.000000 0.324718 0.001785 -0.945809 21.000000 0.018136 -0.317588 0.948055 15.000000 -0.859874 0.254063 0.442797 21.000000 0.017468 0.534043 -0.845277 7.000000 0.583656 0.760751 0.283908 23.000000 0.972741 -0.167114 0.160774 23.000000 0.078496 -0.995785 0.047443 5.000000 -0.191721 -0.882823 0.428798 11.000000 -0.806638 0.550786 -0.214405 6.000000 -0.710750 0.592115 0.379782 1.000000 0.397925 -0.828121 -0.394805 25.000000 0.705613 0.238501 0.667253 0.000000 0.673270 0.698684 0.241967 19.000000 0.615564 0.327729 -0.716711 3.000000 -0.414273 -0.372706 -0.830342 27.000000 -0.552856 0.771125 -0.315781 14.000000 0.271008 -0.525028 0.806784 29.000000 0.662473 0.288572 -0.691271 9.000000 0.943428 -0.331214 -0.015540 5.000000 -0.505263 0.862872 -0.012690 2.000000 -0.805019 -0.592603 -0.027661 26.000000 0.884789 -0.232485 0.403856 14.000000 0.373749 0.414048 0.829986 17.000000 -0.432159 -0.363928 -0.825103 27.000000 0.940365 -0.161234 0.299527 16.000000 -0.490376 -0.474950 0.730722 28.000000 0.968466 -0.021285 -0.248235 25.000000 -0.690789 -0.721500 -0.047429 21.000000" />
	<param name="scale" type="float" default="1.0" />
	<param name="displacement" type="float" default="1.0" />
	<language name="glsl" version="1.0">
		<bind param="pg" program="gnoise" />
		<bind param="scale" program="gnoise" />
		<bind param="displacement" program="gnoise" />
		<program name="gnoise" type="vertex">
<![CDATA[
#define B  32      // table size
#define B2 66      // B*2 + 2
#define BR 0.03125 // 1 / B

uniform float scale;
uniform float displacement;
uniform vec4 pg[B2];            // permutation/gradient table

vec2 scurve(vec2 t)
{
	//return t * t * t * (t * (t * vec3(6,6,6) - vec3(15,15,15)) + vec3(10,10,10));
	return t*t*( vec2(3.0, 3.0) - vec2(2.0, 2.0)*t);
}

float gnoise(vec2 v, vec4 pg[B2])
{
	v = v + vec2(10000.0, 10000.0);

	vec2 i = fract(v * BR) * float(B);   	// index between 0 and B-1
	vec2 f = fract(v);          		// fractional position

	// lookup in permutation table
	vec2 p;
	p[0] = pg[ int(i[0])   ].w;
	p[1] = pg[ int(i[0]) + 1 ].w;
	p = p + i[1];

	// compute dot products between gradients and vectors
	vec4 r;
	r[0] = dot( pg[ int(p[0]) ].xy,   f);
	r[1] = dot( pg[ int(p[1]) ].xy,   f - vec2(1.0, 0.0) );
	r[2] = dot( pg[ int(p[0]) + 1 ].xy, f - vec2(0.0, 1.0) );
	r[3] = dot( pg[ int(p[1]) + 1 ].xy, f - vec2(1.0, 1.0) );

	// interpolate
	f = scurve(f);
	r = mix( r.xyyy, r.zwww, f[1] );
	return mix( r.x, r.y, f[0] );
}

void main()
{
	float n;
	vec3 position;

	// get current position	
	position = scale * vec3(gl_Vertex);

	// compute noise value at current position
	n = (gnoise(position.xy, pg)+ 1.0) * 0.5;
	n = clamp(n, -1.0, 1.0);

	// displacement along normal
	position = (vec3(gl_Normal) * vec3(n) * vec3(displacement));

	gl_Position = gl_ModelViewProjectionMatrix * (gl_Vertex + vec4(position, 1.0));
	gl_FrontColor = vec4(n, n, n, 1.0) * gl_Color;
	gl_BackColor = gl_FrontColor;
}
]]>		
		</program>
		<program name="passthru" type="fragment" source="sh.passthru.color.fp.glsl" />
	</language>
</jittershader>
